// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["user", "post"]
}

model User {
  id             String    @id
  email          String    @unique
  name           String?
  password       String
  phoneNumber    String?
  profilePicture String?
  posts          Post[]    @relation("WrittenPosts")
  comments       Comment[]
  likedPosts     Post[]    @relation("LikedPosts")
  savedPosts     Post[]    @relation("SavedPosts")
  viewedPosts    Post[]    @relation("ViewedPosts")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  role           Role      @default(USER)
  likedComments  Comment[] @relation("LikedComments")
  @@schema("user")
}

model Post {
  id           String    @id @default(uuid())
  title        String
  content      String
  author       User      @relation("WrittenPosts", fields: [authorId], references: [id], onDelete: Cascade)
  authorId     String
  comments     Comment[]
  images       String[]
  anonymous    Boolean
  tags         Tag[]
  likedBy      User[]    @relation("LikedPosts")
  savedBy      User[]    @relation("SavedPosts")
  viewedBy     User[]    @relation("ViewedPosts")
  attachments  String[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  commentAllow Boolean   @default(true)

  @@schema("post")
}

model Comment {
  id              String    @id @default(uuid())
  content         String
  author          User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId        String
  post            Post?     @relation(fields: [parentPostId], references: [id], onDelete: Cascade)
  parentPostId    String?
  parentCommentID String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  comments        Comment[] @relation("ChildComments")
  comment         Comment?  @relation("ChildComments", fields: [parentCommentID], references: [id], onDelete: Cascade)
  likedBy         User[]    @relation("LikedComments")

  @@schema("post")
}

enum Tag {
  TUITION
  BLOOD
  @@schema("post")
}

enum Role {
  USER
  ADMIN
  BR
  CR
  @@schema("user")
}